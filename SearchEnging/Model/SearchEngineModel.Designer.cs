//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SearchEngineModel", "WordDocumentWordRelationship", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SearchEnging.Model.Word), "DocumentWordRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SearchEnging.Model.DocumentWordRelationship), true)]
[assembly: EdmRelationshipAttribute("SearchEngineModel", "DocumentDocumentWordRelationship", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SearchEnging.Model.Document), "DocumentWordRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SearchEnging.Model.DocumentWordRelationship), true)]

#endregion

namespace SearchEnging.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SearchEngineModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SearchEngineModelContainer object using the connection string found in the 'SearchEngineModelContainer' section of the application configuration file.
        /// </summary>
        public SearchEngineModelContainer() : base("name=SearchEngineModelContainer", "SearchEngineModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SearchEngineModelContainer object.
        /// </summary>
        public SearchEngineModelContainer(string connectionString) : base(connectionString, "SearchEngineModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SearchEngineModelContainer object.
        /// </summary>
        public SearchEngineModelContainer(EntityConnection connection) : base(connection, "SearchEngineModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> DocumentSet
        {
            get
            {
                if ((_DocumentSet == null))
                {
                    _DocumentSet = base.CreateObjectSet<Document>("DocumentSet");
                }
                return _DocumentSet;
            }
        }
        private ObjectSet<Document> _DocumentSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Word> WordSet
        {
            get
            {
                if ((_WordSet == null))
                {
                    _WordSet = base.CreateObjectSet<Word>("WordSet");
                }
                return _WordSet;
            }
        }
        private ObjectSet<Word> _WordSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentWordRelationship> DocumentWordRelationshipSet
        {
            get
            {
                if ((_DocumentWordRelationshipSet == null))
                {
                    _DocumentWordRelationshipSet = base.CreateObjectSet<DocumentWordRelationship>("DocumentWordRelationshipSet");
                }
                return _DocumentWordRelationshipSet;
            }
        }
        private ObjectSet<DocumentWordRelationship> _DocumentWordRelationshipSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentSet(Document document)
        {
            base.AddObject("DocumentSet", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordSet(Word word)
        {
            base.AddObject("WordSet", word);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentWordRelationshipSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentWordRelationshipSet(DocumentWordRelationship documentWordRelationship)
        {
            base.AddObject("DocumentWordRelationshipSet", documentWordRelationship);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SearchEngineModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="uri">Initial value of the Uri property.</param>
        /// <param name="dateIndexed">Initial value of the DateIndexed property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.String title, global::System.String uri, global::System.String dateIndexed)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.Title = title;
            document.Uri = uri;
            document.DateIndexed = dateIndexed;
            return document;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Uri
        {
            get
            {
                return _Uri;
            }
            set
            {
                OnUriChanging(value);
                ReportPropertyChanging("Uri");
                _Uri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Uri");
                OnUriChanged();
            }
        }
        private global::System.String _Uri;
        partial void OnUriChanging(global::System.String value);
        partial void OnUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateIndexed
        {
            get
            {
                return _DateIndexed;
            }
            set
            {
                OnDateIndexedChanging(value);
                ReportPropertyChanging("DateIndexed");
                _DateIndexed = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateIndexed");
                OnDateIndexedChanged();
            }
        }
        private global::System.String _DateIndexed;
        partial void OnDateIndexedChanging(global::System.String value);
        partial void OnDateIndexedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SearchEngineModel", "DocumentDocumentWordRelationship", "DocumentWordRelationship")]
        public EntityCollection<DocumentWordRelationship> words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentWordRelationship>("SearchEngineModel.DocumentDocumentWordRelationship", "DocumentWordRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentWordRelationship>("SearchEngineModel.DocumentDocumentWordRelationship", "DocumentWordRelationship", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SearchEngineModel", Name="DocumentWordRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentWordRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentWordRelationship object.
        /// </summary>
        /// <param name="wordValue">Initial value of the WordValue property.</param>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="frequency">Initial value of the Frequency property.</param>
        public static DocumentWordRelationship CreateDocumentWordRelationship(global::System.String wordValue, global::System.Int32 documentId, global::System.Int32 frequency)
        {
            DocumentWordRelationship documentWordRelationship = new DocumentWordRelationship();
            documentWordRelationship.WordValue = wordValue;
            documentWordRelationship.DocumentId = documentId;
            documentWordRelationship.Frequency = frequency;
            return documentWordRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WordValue
        {
            get
            {
                return _WordValue;
            }
            set
            {
                if (_WordValue != value)
                {
                    OnWordValueChanging(value);
                    ReportPropertyChanging("WordValue");
                    _WordValue = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WordValue");
                    OnWordValueChanged();
                }
            }
        }
        private global::System.String _WordValue;
        partial void OnWordValueChanging(global::System.String value);
        partial void OnWordValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private global::System.Int32 _Frequency;
        partial void OnFrequencyChanging(global::System.Int32 value);
        partial void OnFrequencyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SearchEngineModel", "WordDocumentWordRelationship", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("SearchEngineModel.WordDocumentWordRelationship", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("SearchEngineModel.WordDocumentWordRelationship", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("SearchEngineModel.WordDocumentWordRelationship", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("SearchEngineModel.WordDocumentWordRelationship", "Word", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SearchEngineModel", "DocumentDocumentWordRelationship", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("SearchEngineModel.DocumentDocumentWordRelationship", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("SearchEngineModel.DocumentDocumentWordRelationship", "Document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("SearchEngineModel.DocumentDocumentWordRelationship", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("SearchEngineModel.DocumentDocumentWordRelationship", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SearchEngineModel", Name="Word")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Word : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Word object.
        /// </summary>
        /// <param name="value">Initial value of the Value property.</param>
        public static Word CreateWord(global::System.String value)
        {
            Word word = new Word();
            word.Value = value;
            return word;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                if (_Value != value)
                {
                    OnValueChanging(value);
                    ReportPropertyChanging("Value");
                    _Value = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Value");
                    OnValueChanged();
                }
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SearchEngineModel", "WordDocumentWordRelationship", "DocumentWordRelationship")]
        public EntityCollection<DocumentWordRelationship> documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentWordRelationship>("SearchEngineModel.WordDocumentWordRelationship", "DocumentWordRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentWordRelationship>("SearchEngineModel.WordDocumentWordRelationship", "DocumentWordRelationship", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
